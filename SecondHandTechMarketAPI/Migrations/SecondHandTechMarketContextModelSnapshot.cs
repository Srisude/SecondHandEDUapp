// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondHandTechMarketAPI.Models;

#nullable disable

namespace SecondHandTechMarketAPI.Migrations
{
    [DbContext(typeof(SecondHandTechMarketContext))]
    partial class SecondHandTechMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ListingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListingId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ListingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ListingStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("SellerID");

                    b.HasKey("ListingId")
                        .HasName("PK__Listings__BF3EBEF0A6B98516");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__C87C037C65CDB092");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfferID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("BuyerID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("OfferPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("OfferStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("OfferId")
                        .HasName("PK__Offers__8EBCF0B1DD5F33D2");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("SellerID");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED6ADFEEFB");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("BuyerID");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("SellerID");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A4B05BC0F6C");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACD9F17D40");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534C57AC03D")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Listing", b =>
                {
                    b.HasOne("SecondHandTechMarketAPI.Models.Product", "Product")
                        .WithMany("Listings")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Listings__Produc__403A8C7D");

                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Seller")
                        .WithMany("Listings")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Listings__Seller__5535A963");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Message", b =>
                {
                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Messages__Receiv__52593CB8");

                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Messages__Sender__5165187F");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Offer", b =>
                {
                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Buyer")
                        .WithMany("Offers")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__Offers__BuyerID__4BAC3F29");

                    b.HasOne("SecondHandTechMarketAPI.Models.Product", "Product")
                        .WithMany("Offers")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Offers__ProductI__4CA06362");

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Product", b =>
                {
                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Products__Seller__3C69FB99");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Transaction", b =>
                {
                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Buyer")
                        .WithMany("TransactionBuyers")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__Transacti__Buyer__44FF419A");

                    b.HasOne("SecondHandTechMarketAPI.Models.Product", "Product")
                        .WithMany("Transactions")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Transacti__Produ__46E78A0C");

                    b.HasOne("SecondHandTechMarketAPI.Models.User", "Seller")
                        .WithMany("TransactionSellers")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Transacti__Selle__45F365D3");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.Product", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("Offers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("SecondHandTechMarketAPI.Models.User", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("Offers");

                    b.Navigation("Products");

                    b.Navigation("TransactionBuyers");

                    b.Navigation("TransactionSellers");
                });
#pragma warning restore 612, 618
        }
    }
}
